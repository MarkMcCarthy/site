diff --git a/includes/service.inc b/includes/service.inc
index 76225fa..76b236d 100644
--- a/includes/service.inc
+++ b/includes/service.inc
@@ -1546,13 +1546,6 @@ class SearchApiSolrService extends SearchApiAbstractService {
         }
       }
     }
-    if (method_exists($filter, 'getTags')) {
-      foreach ($filter->getTags() as $tag) {
-        $prefix = "{!tag=$tag}";
-        // We can only apply one tag per filter.
-        break;
-      }
-    }
     if ($or && count($fq) > 1) {
       $fq = array('((' . implode(') OR (', $fq) . '))');
     }
@@ -1635,6 +1628,7 @@ class SearchApiSolrService extends SearchApiAbstractService {
     $facet_params['facet.limit'] = 10;
     $facet_params['facet.mincount'] = 1;
     $facet_params['facet.missing'] = 'false';
+    $taggedFields = array();
     foreach ($facets as $info) {
       if (empty($fields[$info['field']])) {
         continue;
@@ -1644,9 +1638,10 @@ class SearchApiSolrService extends SearchApiAbstractService {
       // Check for the "or" operator.
       if (isset($info['operator']) && $info['operator'] === 'or') {
         // Remember that filters for this field should be tagged.
-        $tag = 'facet:' . $info['field'];
+        $escaped = call_user_func(array($this->connection_class, 'escapeFieldName'), $fields[$info['field']]);
+        $taggedFields[$escaped] = "{!tag=$escaped}";
         // Add the facet field.
-        $facet_params['facet.field'][] = "{!ex=$tag}$field";
+        $facet_params['facet.field'][] = "{!ex=$escaped}$field";
       }
       else {
         // Add the facet field.
@@ -1665,6 +1660,20 @@ class SearchApiSolrService extends SearchApiAbstractService {
         $facet_params["f.$field.facet.missing"] = 'true';
       }
     }
+    // Tag filters of fields with "OR" facets.
+    foreach ($taggedFields as $field => $tag) {
+      $regex = '#(?<![^( ])' . preg_quote($field, '#') . ':#';
+      foreach ($fq as $i => $filter) {
+        // Solr can't handle two tags on the same filter, so we don't add two.
+        // Another option here would even be to remove the other tag, too,
+        // since we can be pretty sure that this filter does not originate from
+        // a facet â€“ however, wrong results would still be possible, and this is
+        // definitely an edge case, so don't bother.
+        if (preg_match($regex, $filter) && substr($filter, 0, 6) != '{!tag=') {
+          $fq[$i] = $tag . $filter;
+        }
+      }
+    }
 
     return $facet_params;
   }
